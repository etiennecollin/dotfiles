# vim:fileencoding=utf-8:foldmethod=marker

include ./gruvbox.conf

macos_option_as_alt left

font_family      Maple Mono NF
font_features    MapleMono-NF-Regular zero cv01 cv02 ss03
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size 16.0

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. Default configuration is all
#: layouts in alphabetical order. For a list of available layouts, see
#: the layouts <https://sw.kovidgoyal.net/kitty/overview/#layouts>.
enabled_layouts splits

#: Allow other programs to control kitty. If you turn this on, other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc. Note that this even works over SSH
#: connections. The default setting of no prevents any form of remote
#: control. The meaning of the various values are:
allow_remote_control yes

#: password
#:    Remote control requests received over both the TTY device and the socket are
#:    confirmed based on passwords, see remote_control_password.

#: socket-only
#:    Remote control requests received over a socket are accepted unconditionally.
#:    Requests received over the TTY are denied. See listen_on.

#: socket
#:    Remote control requests received over a socket are accepted unconditionally.
#:    Requests received over the TTY are confirmed based on password.

#: no
#:    Remote control is completely disabled.

#: yes
#:    Remote control requests are always accepted.

#: Listen to the specified UNIX socket for remote control connections.
#: Note that this will apply to all kitty instances. It can be
#: overridden by the kitty --listen-on command line option, which also
#: supports listening on a TCP socket. This option accepts only UNIX
#: sockets, such as unix:${TEMP}/mykitty or unix:@mykitty (on Linux).
#: Environment variables are expanded and relative paths are resolved
#: with respect to the temporary directory. If {kitty_pid} is present,
#: then it is replaced by the PID of the kitty process, otherwise the
#: PID of the kitty process is appended to the value, with a hyphen.
#: See the help for kitty --listen-on for more details. Note that this
#: will be ignored unless allow_remote_control is set to either: yes,
#: socket or socket-only. Changing this option by reloading the config
#: is not supported.

# listen_on unix:@mykitty
